@using RPS.Web.Models.Routing;
@model RPS.Core.Models.PtItem

<div>
    <div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3">
        <h1 class="h2" id="itemTitle">@Model.Title</h1>
        <div class="btn-toolbar mb-2 mb-md-0">
            <div class="btn-group mr-2">
                <button type="button" class="btn-screen-switch" data-screen="details">Details</button>

                <button type="button" class="btn-screen-switch" data-screen="tasks">Tasks</button>

                <button type="button" class="btn-screen-switch" data-screen="chitchat">Chitchat</button>
                @Html.ActionLink("Details", "Detail", new { id = Model.Id, screen = DetailScreenEnum.Details }, new { @class = "btn btn-secondary" })
                @Html.ActionLink("Tasks", "Detail", new { id = Model.Id, screen = DetailScreenEnum.Tasks }, new { @class = "btn btn-secondary" })
                @Html.ActionLink("Chitchat", "Detail", new { id = Model.Id, screen = DetailScreenEnum.Chitchat }, new { @class = "btn btn-secondary" })
            </div>
        </div>
    </div>

</div>

@{
    switch (ViewBag.screen)
    {
        case DetailScreenEnum.Details:
            <div id="detailsScreenContainer">Details</div>
            break;
        case DetailScreenEnum.Tasks:
            <div id="tasksScreenContainer">Tasks</div>
            break;
        case DetailScreenEnum.Chitchat:
            <div id="chitchatScreenContainer">Chitchat</div>
            break;
    }
}

<h2>Details</h2>

<div>
    <h4>PtItem</h4>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.Title)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Title)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.DateCreated)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.DateCreated)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.DateModified)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.DateModified)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.DateDeleted)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.DateDeleted)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Description)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Description)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Estimate)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Estimate)
        </dd>

    </dl>
</div>
<p>
    @Html.ActionLink("Edit", "Edit", new { id = Model.Id }) |
    @Html.ActionLink("Back to List", "Index")
</p>
